{"remainingRequest":"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/babel-loader/lib/index.js!/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/vuetify-loader/lib/loader.js!/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/src/components/GChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/src/components/GChart.vue","mtime":1571824141418},{"path":"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es7.object.entries\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _typeof from \"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\nimport loadGoogleCharts from \"../lib/google-charts-loader\";\nimport debounce from 'debounce';\nvar chartsLib = null;\nexport default {\n  name: 'GChart',\n  props: {\n    type: {\n      type: String\n    },\n    data: {\n      type: [Array, Object],\n      default: function _default() {\n        return [];\n      }\n    },\n    options: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    version: {\n      type: String,\n      default: 'current'\n    },\n    settings: {\n      type: Object,\n      default: function _default() {\n        return {\n          packages: ['corechart', 'table']\n        };\n      }\n    },\n    events: {\n      type: Object\n    },\n    createChart: {\n      type: Function\n    },\n    resizeDebounce: {\n      type: Number,\n      default: 200\n    }\n  },\n  data: function data() {\n    return {\n      chartObject: null\n    };\n  },\n  watch: {\n    data: {\n      deep: true,\n      handler: function handler() {\n        this.drawChart();\n      }\n    },\n    options: {\n      deep: true,\n      handler: function handler() {\n        this.drawChart();\n      }\n    },\n    type: function type(value) {\n      this.createChartObject();\n      this.drawChart();\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    loadGoogleCharts(this.version, this.settings).then(function (api) {\n      chartsLib = api;\n\n      var chart = _this.createChartObject();\n\n      _this.$emit('ready', chart, api);\n\n      _this.drawChart();\n    });\n    if (this.resizeDebounce > 0) window.addEventListener('resize', debounce(this.drawChart, this.resizeDebounce));\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.chartObject) {\n      this.chartObject.clearChart();\n    }\n  },\n  methods: {\n    drawChart: function drawChart() {\n      if (!chartsLib || !this.chartObject) return;\n      var data = this.getValidChartData();\n      if (data) this.chartObject.draw(data, this.options);\n    },\n    getValidChartData: function getValidChartData() {\n      if (this.data instanceof chartsLib.visualization.DataTable) return this.data;\n      if (this.data instanceof chartsLib.visualization.DataView) return this.data;\n      if (Array.isArray(this.data)) return chartsLib.visualization.arrayToDataTable(this.data);\n      if (this.data !== null && _typeof(this.data) === 'object') return new chartsLib.visualization.DataTable(this.data);\n      return null;\n    },\n    createChartObject: function createChartObject() {\n      var createChart = function createChart(el, google, type) {\n        if (!type) throw new Error('please, provide chart type property');\n        return new google.visualization[type](el);\n      };\n\n      var fn = this.createChart || createChart;\n      this.chartObject = fn(this.$refs.chart, chartsLib, this.type);\n      this.attachListeners();\n      return this.chartObject;\n    },\n    attachListeners: function attachListeners() {\n      var _this2 = this;\n\n      if (!this.events) return;\n      Object.entries(this.events).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            event = _ref2[0],\n            listener = _ref2[1];\n\n        chartsLib.visualization.events.addListener(_this2.chartObject, event, listener);\n      });\n    }\n  }\n};",{"version":3,"sources":["GChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div ref=\"chart\"></div>\n</template>\n\n<script>\nimport loadGoogleCharts from '../lib/google-charts-loader'\nimport debounce from 'debounce'\nlet chartsLib = null\nexport default {\n  name: 'GChart',\n\n  props: {\n    type: {\n      type: String\n    },\n    data: {\n      type: [Array, Object],\n      default: () => []\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    version: {\n      type: String,\n      default: 'current'\n    },\n    settings: {\n      type: Object,\n      default: () => ({\n        packages: ['corechart', 'table']\n      })\n    },\n    events: {\n      type: Object\n    },\n    createChart: {\n      type: Function\n    },\n    resizeDebounce: {\n      type: Number,\n      default: 200\n    }\n  },\n\n  data () {\n    return {\n      chartObject: null\n    }\n  },\n\n  watch: {\n    data: {\n      deep: true,\n      handler () {\n        this.drawChart()\n      }\n    },\n    options: {\n      deep: true,\n      handler () {\n        this.drawChart()\n      }\n    },\n    type (value) {\n      this.createChartObject()\n      this.drawChart()\n    }\n  },\n\n  mounted () {\n    loadGoogleCharts(this.version, this.settings).then(api => {\n      chartsLib = api\n      const chart = this.createChartObject()\n      this.$emit('ready', chart, api)\n      this.drawChart()\n    })\n    if (this.resizeDebounce > 0) window.addEventListener('resize', debounce(this.drawChart, this.resizeDebounce))\n  },\n\n  beforeDestroy () {\n    if (this.chartObject) {\n      this.chartObject.clearChart()\n    }\n  },\n\n  methods: {\n    drawChart () {\n      if (!chartsLib || !this.chartObject) return\n      const data = this.getValidChartData()\n      if (data) this.chartObject.draw(data, this.options)\n    },\n\n    getValidChartData () {\n      if (this.data instanceof chartsLib.visualization.DataTable) return this.data\n      if (this.data instanceof chartsLib.visualization.DataView) return this.data\n      if (Array.isArray(this.data)) return chartsLib.visualization.arrayToDataTable(this.data)\n      if (this.data !== null && typeof this.data === 'object') return new chartsLib.visualization.DataTable(this.data)\n      return null\n    },\n\n    createChartObject () {\n      const createChart = (el, google, type) => {\n        if (!type) throw new Error('please, provide chart type property')\n        return new google.visualization[type](el)\n      }\n      const fn = this.createChart || createChart\n      this.chartObject = fn(this.$refs.chart, chartsLib, this.type)\n      this.attachListeners()\n      return this.chartObject\n    },\n\n    attachListeners () {\n      if (!this.events) return\n      Object.entries(this.events).forEach(([event, listener]) => {\n        chartsLib.visualization.events.addListener(this.chartObject, event, listener)\n      })\n    }\n  }\n}\n\n</script>\n"],"sourceRoot":"src/components"}]}