{"remainingRequest":"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/src/components/mapC.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/src/components/mapC.vue","mtime":1571409090871},{"path":"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alberto/Escritorio/vue.js-unit-test-with-jest/Vue.js-unit-test-with-jest/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"GoogleMap\",\n  data() {\n    return {\n      // default to Montreal to keep it simple\n      // change this to whatever makes sense\n      center: { lat: 45.508, lng: -73.587 },\n      markers: [],\n      places: [],\n      currentPlace: null,\n      maps: \"\"\n    };\n  },\n\n  mounted() {\n    this.geolocate();\n    //seejecuta solo al inicio\n  },\n\n  methods: {\n    // receives a place object via the autocomplete component\n    setPlace(place) {\n      this.currentPlace = place;\n    },\n    addMarker() {\n      var milatitud = 0;\n      var milongitud = 0;\n      navigator.geolocation.getCurrentPosition(position => {\n        milatitud = position.coords.latitude;\n        milongitud = position.coords.longitude;\n        const marker = {\n          lat: milatitud,\n          lng: milongitud\n        };\n        this.markers.push({ position: marker });\n        this.places.push(this.currentPlace);\n        this.center = marker;\n        this.currentPlace = null;\n      });\n    },\n    async mapsVer() {\n      try {\n        const baseURI =\n          \"https://maps.googleapis.com/maps/api/geocode/json?address=lodeiro+viveiro+&key=AIzaSyB-0SUyRksj2aPf0oK5yG59Uw2-q4aHDRU\";\n        let respuesta = await this.$axios.get(baseURI);\n        this.maps = respuesta.data.results[0].geometry.location;\n        const json = this.maps;\n        var milatitud = 0;\n        var milongitud = 0;\n        milatitud = json.lat;\n\n        milongitud = json.lng;\n        console.logmilatitud\n                console.logmilongitud\n\n        const marker = {\n          lat: milatitud,\n          lng: milongitud\n        };\n        this.markers.push({ position: marker });\n        this.places.push(this.currentPlace);\n        this.center = marker;\n        this.currentPlace = null;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    geolocate: function() {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.center = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n      });\n    }\n  }\n};\n",{"version":3,"sources":["mapC.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mapC.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div>\n      <h2>Search and add a pin</h2>\n\n      <label>\n        <button @click=\"mapsVer\">AÃ±adir marker</button>\n        {{maps}}\n      </label>\n      <br />\n    </div>\n    <br />\n    <gmap-map :center=\"center\" :zoom=\"12\" style=\"width:100%;  height: 700px;\">\n      <gmap-marker\n        :key=\"index\"\n        v-for=\"(m, index) in markers\"\n        :position=\"m.position\"\n        @click=\"center=m.position\"\n      ></gmap-marker>\n    </gmap-map>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"GoogleMap\",\n  data() {\n    return {\n      // default to Montreal to keep it simple\n      // change this to whatever makes sense\n      center: { lat: 45.508, lng: -73.587 },\n      markers: [],\n      places: [],\n      currentPlace: null,\n      maps: \"\"\n    };\n  },\n\n  mounted() {\n    this.geolocate();\n    //seejecuta solo al inicio\n  },\n\n  methods: {\n    // receives a place object via the autocomplete component\n    setPlace(place) {\n      this.currentPlace = place;\n    },\n    addMarker() {\n      var milatitud = 0;\n      var milongitud = 0;\n      navigator.geolocation.getCurrentPosition(position => {\n        milatitud = position.coords.latitude;\n        milongitud = position.coords.longitude;\n        const marker = {\n          lat: milatitud,\n          lng: milongitud\n        };\n        this.markers.push({ position: marker });\n        this.places.push(this.currentPlace);\n        this.center = marker;\n        this.currentPlace = null;\n      });\n    },\n    async mapsVer() {\n      try {\n        const baseURI =\n          \"https://maps.googleapis.com/maps/api/geocode/json?address=lodeiro+viveiro+&key=AIzaSyB-0SUyRksj2aPf0oK5yG59Uw2-q4aHDRU\";\n        let respuesta = await this.$axios.get(baseURI);\n        this.maps = respuesta.data.results[0].geometry.location;\n        const json = this.maps;\n        var milatitud = 0;\n        var milongitud = 0;\n        milatitud = json.lat;\n\n        milongitud = json.lng;\n        console.logmilatitud\n                console.logmilongitud\n\n        const marker = {\n          lat: milatitud,\n          lng: milongitud\n        };\n        this.markers.push({ position: marker });\n        this.places.push(this.currentPlace);\n        this.center = marker;\n        this.currentPlace = null;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    geolocate: function() {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.center = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n      });\n    }\n  }\n};\n</script>"]}]}